"use client";
import React, { useState } from "react";
import Image from "next/image";
import Icon, {
  PlusOutlined,
  LeftOutlined,
  RightOutlined,
} from "@ant-design/icons";

import logo from "../../public/images/focus-power-logo.png";
import applyRadicalFocus from "../../public/images/apply-radical-focus.png";

const getIconColor = (isActive: boolean) =>
  isActive ? "rgba(48, 48, 211, 1)" : "rgba(171, 171, 194, 1)";

const ApertureSvg = ({ active }: { active: boolean }) => (
  <svg
    width="26"
    height="26"
    viewBox="0 0 26 26"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M4.99058 9.02967C4.39652 10.2258 4.0625 11.5739 4.0625 13C4.0625 14.2084 4.3023 15.3607 4.73691 16.4121L8.59593 11.8698C8.63124 11.8166 8.67291 11.7673 8.72033 11.7233L10.1997 9.98208L4.99058 9.02967ZM5.918 7.54729L11.8385 8.62976C11.8644 8.63322 11.8903 8.63794 11.9159 8.64393L14.2149 9.06427L12.4338 4.08014C9.78245 4.24588 7.44447 5.56764 5.918 7.54729ZM14.1808 4.13981L17.0169 12.0762L20.4404 8.04654C19.0448 5.95444 16.7903 4.48423 14.1808 4.13981ZM21.2631 9.58795L17.4041 14.1302C17.3688 14.1834 17.3271 14.2327 17.2797 14.2766L15.8003 16.0179L21.0094 16.9703C21.6035 15.7742 21.9375 14.4261 21.9375 13C21.9375 11.7916 21.6977 10.6393 21.2631 9.58795ZM20.082 18.4527L14.1616 17.3702C14.1356 17.3668 14.1097 17.3621 14.0841 17.3561L11.7851 16.9357L13.5662 21.9199C16.2175 21.7541 18.5555 20.4324 20.082 18.4527ZM11.8192 21.8602L8.98313 13.9238L5.55963 17.9535C6.95523 20.0456 9.20973 21.5158 11.8192 21.8602ZM10.1978 12.494L11.1535 15.1683L13.9547 15.6805L15.8022 13.506L14.8465 10.8317L12.0453 10.3195L10.1978 12.494ZM2.4375 13C2.4375 7.16649 7.16649 2.4375 13 2.4375C18.8335 2.4375 23.5625 7.16649 23.5625 13C23.5625 18.8335 18.8335 23.5625 13 23.5625C7.16649 23.5625 2.4375 18.8335 2.4375 13Z"
      fill={getIconColor(active)}
    />
  </svg>
);
const MountainsSvg = ({ active }: { active: boolean }) => (
  <svg
    width="26"
    height="26"
    viewBox="0 0 26 26"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M13.8125 4.0625C13.8125 3.61377 14.1763 3.25 14.625 3.25H18.2813C18.73 3.25 19.0938 3.61377 19.0938 4.0625V6.5C19.0938 6.94873 18.73 7.3125 18.2813 7.3125H15.4375V8.69149L23.426 20.6743C23.5923 20.9236 23.6078 21.2442 23.4664 21.5084C23.325 21.7726 23.0497 21.9375 22.75 21.9375H3.25C2.9444 21.9375 2.66465 21.766 2.52597 21.4937C2.3873 21.2214 2.41316 20.8943 2.59291 20.6471L9.09291 11.7096C9.2458 11.4994 9.49006 11.375 9.75 11.375C10.01 11.375 10.2542 11.4994 10.4071 11.7096L11.1341 12.7092L13.8125 8.69149V4.0625ZM14.625 10.4023L11.8391 14.5811C11.6917 14.8023 11.4454 14.9373 11.1796 14.9428C10.9139 14.9482 10.6623 14.8233 10.5059 14.6083L9.75 13.5689L4.84557 20.3125H21.2318L14.625 10.4023ZM15.4375 5.6875H17.4688V4.875H15.4375V5.6875Z"
      fill={getIconColor(active)}
    />
  </svg>
);
const UserSwitchSvg = ({ active }: { active: boolean }) => (
  <svg
    width="26"
    height="26"
    viewBox="0 0 26 26"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M13 8.93752C11.2051 8.93752 9.75 10.3926 9.75 12.1875C9.75 13.9825 11.2051 15.4375 13 15.4375C14.7949 15.4375 16.25 13.9825 16.25 12.1875C16.25 10.3926 14.7949 8.93752 13 8.93752ZM16.0163 16.0176C17.1483 15.1249 17.875 13.7411 17.875 12.1875C17.875 9.49514 15.6924 7.31252 13 7.31252C10.3076 7.31252 8.125 9.49514 8.125 12.1875C8.125 13.7411 8.85171 15.1249 9.98375 16.0176C9.55728 16.1881 9.14432 16.395 8.74966 16.6373C7.47089 17.4222 6.43445 18.5459 5.75521 19.8838C5.55207 20.2839 5.71176 20.7729 6.11187 20.9761C6.51199 21.1792 7.00103 21.0195 7.20417 20.6194C7.74756 19.5491 8.57671 18.6501 9.59973 18.0222C10.6225 17.3944 11.7994 17.0625 13 17.0625C14.2006 17.0625 15.3775 17.3944 16.4003 18.0222C17.4233 18.6501 18.2524 19.5491 18.7958 20.6194C18.999 21.0195 19.488 21.1792 19.8881 20.9761C20.2882 20.7729 20.4479 20.2839 20.2448 19.8838C19.5656 18.5459 18.5291 17.4222 17.2503 16.6373C16.8557 16.395 16.4427 16.1881 16.0163 16.0176Z"
      fill={getIconColor(active)}
    />
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M2.67548 9.988C2.99278 9.6707 3.50722 9.6707 3.82452 9.988L6.26202 12.4255C6.57933 12.7428 6.57933 13.2572 6.26202 13.5745C5.94472 13.8918 5.43028 13.8918 5.11298 13.5745L3.25 11.7116L1.38702 13.5745C1.06972 13.8918 0.555277 13.8918 0.237976 13.5745C-0.0793253 13.2572 -0.0793253 12.7428 0.237976 12.4255L2.67548 9.988Z"
      fill={getIconColor(active)}
    />
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M19.738 12.4255C20.0553 12.1082 20.5697 12.1082 20.887 12.4255L22.75 14.2885L24.613 12.4255C24.9303 12.1082 25.4447 12.1082 25.762 12.4255C26.0793 12.7428 26.0793 13.2572 25.762 13.5745L23.3245 16.012C23.0072 16.3294 22.4928 16.3294 22.1755 16.012L19.738 13.5745C19.4207 13.2572 19.4207 12.7428 19.738 12.4255Z"
      fill={getIconColor(active)}
    />
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M9.32011 3.08864C11.4592 2.29357 13.7983 2.21269 15.9872 2.85809C18.1761 3.5035 20.0972 4.84047 21.4627 6.66889C22.8283 8.49731 23.565 10.7188 23.5625 13.0009L22.75 13H23.5625V13.0009V15.4375C23.5625 15.8863 23.1987 16.25 22.75 16.25C22.3013 16.25 21.9375 15.8863 21.9375 15.4375V12.9991C21.9396 11.0681 21.3163 9.1884 20.1608 7.64127C19.0053 6.09415 17.3798 4.96286 15.5276 4.41675C13.6755 3.87064 11.6963 3.93908 9.88625 4.61183C8.07623 5.28457 6.53277 6.52544 5.48691 8.14868C5.24387 8.5259 4.74106 8.63467 4.36384 8.39163C3.98663 8.14859 3.87786 7.64577 4.1209 7.26856C5.35691 5.35017 7.181 3.8837 9.32011 3.08864Z"
      fill={getIconColor(active)}
    />
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M3.25 9.75002C3.69873 9.75002 4.0625 10.1138 4.0625 10.5625L4.0625 13.0009C4.06039 14.9319 4.68373 16.8117 5.83922 18.3588C6.99471 19.9059 8.62019 21.0372 10.4724 21.5833C12.3245 22.1294 14.3037 22.061 16.1138 21.3882C17.9238 20.7155 19.4672 19.4746 20.5131 17.8514C20.7561 17.4742 21.2589 17.3654 21.6362 17.6084C22.0134 17.8515 22.1221 18.3543 21.8791 18.7315C20.6431 20.6499 18.819 22.1164 16.6799 22.9114C14.5408 23.7065 12.2017 23.7874 10.0128 23.142C7.82386 22.4966 5.90284 21.1596 4.53726 19.3312C3.17178 17.5029 2.43511 15.2815 2.4375 12.9996V10.5625C2.4375 10.1138 2.80127 9.75002 3.25 9.75002Z"
      fill={getIconColor(active)}
    />
  </svg>
);
const HexagonSvg = ({ active }: { active: boolean }) => (
  <svg
    width="26"
    height="26"
    viewBox="0 0 26 26"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M7.2885 2.4375L11.4034 2.4375C11.6107 2.43863 11.8133 2.49535 11.9906 2.60086C12.1677 2.70632 12.3128 2.8564 12.4124 3.0347L12.4131 3.03599L14.4758 6.74294C14.5739 6.91716 14.625 7.11345 14.625 7.3125C14.625 7.51154 14.5739 7.70781 14.4758 7.88202L12.4124 11.5903C12.3128 11.7686 12.1677 11.9187 11.9906 12.0241C11.8133 12.1297 11.6107 12.1864 11.4034 12.1875L11.399 12.1875L7.28407 12.1875C7.07677 12.1864 6.87421 12.1297 6.69693 12.0241C6.51977 11.9187 6.3747 11.7686 6.27507 11.5903L4.21168 7.88203C4.11362 7.70782 4.0625 7.51154 4.0625 7.3125C4.0625 7.11347 4.11361 6.91721 4.21166 6.743L6.27507 3.0347C6.37471 2.8564 6.51977 2.70632 6.69693 2.60086C6.8742 2.49535 7.07676 2.43864 7.28407 2.43751L7.2885 2.4375ZM7.5628 4.0625L5.75439 7.3125L7.5628 10.5625H11.1247L12.9331 7.3125L11.1247 4.0625L7.5628 4.0625ZM16.6278 8.12501L16.6323 8.12499L20.7472 8.125C20.9545 8.12613 21.157 8.18285 21.3343 8.28836C21.5115 8.39382 21.6565 8.5439 21.7562 8.7222L21.7569 8.72349L23.8196 12.4305C23.9176 12.6047 23.9688 12.801 23.9688 13C23.9688 13.199 23.9176 13.3953 23.8196 13.5695L21.7569 17.2765L21.7562 17.2778C21.6565 17.4561 21.5115 17.6062 21.3343 17.7116C21.157 17.8172 20.9545 17.8739 20.7472 17.875L20.7427 17.875L16.6278 17.875C16.4205 17.8739 16.2179 17.8171 16.0407 17.7116C15.8635 17.6062 15.7185 17.4561 15.6188 17.2778L13.5554 13.5695C13.4574 13.3953 13.4062 13.199 13.4062 13C13.4062 12.801 13.4574 12.6047 13.5554 12.4305L15.6188 8.7222C15.7185 8.5439 15.8635 8.39382 16.0407 8.28836C16.2179 8.18285 16.4205 8.12614 16.6278 8.12501ZM16.9065 9.75L15.0981 13L16.9065 16.25L20.4685 16.25L22.2769 13L20.4685 9.75H16.9065ZM7.2885 13.8125H11.4034C11.6107 13.8136 11.8133 13.8703 11.9906 13.9759C12.1677 14.0813 12.3128 14.2314 12.4124 14.4097L12.4131 14.411L14.4759 18.1181C14.5739 18.2923 14.625 18.4885 14.625 18.6875C14.625 18.8865 14.5739 19.0828 14.4758 19.257L12.4124 22.9653C12.3128 23.1436 12.1677 23.2937 11.9906 23.3991C11.8133 23.5047 11.6107 23.5614 11.4034 23.5625L11.399 23.5625L7.28407 23.5625C7.07675 23.5614 6.87419 23.5046 6.69693 23.3991C6.51977 23.2937 6.37471 23.1436 6.27507 22.9653L4.21165 19.257C4.11361 19.0828 4.0625 18.8865 4.0625 18.6875C4.0625 18.4885 4.11361 18.2922 4.21166 18.118L6.27507 14.4097C6.3747 14.2314 6.51977 14.0813 6.69693 13.9759C6.8742 13.8703 7.07676 13.8136 7.28407 13.8125L7.2885 13.8125ZM7.5628 15.4375L5.75439 18.6875L7.5628 21.9375L11.1247 21.9375L12.9331 18.6875L11.1247 15.4375H7.5628Z"
      fill={getIconColor(active)}
    />
  </svg>
);
const UsersFourSvg = ({ active }: { active: boolean }) => (
  <svg
    width="26"
    height="26"
    viewBox="0 0 26 26"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M8.12499 14.625C6.77879 14.625 5.68749 15.7163 5.68749 17.0625C5.68749 18.4087 6.77879 19.5 8.12499 19.5C9.47118 19.5 10.5625 18.4087 10.5625 17.0625C10.5625 15.7163 9.47118 14.625 8.12499 14.625ZM4.06249 17.0625C4.06249 14.8188 5.88133 13 8.12499 13C10.3686 13 12.1875 14.8188 12.1875 17.0625C12.1875 19.3062 10.3686 21.125 8.12499 21.125C5.88133 21.125 4.06249 19.3062 4.06249 17.0625Z"
      fill={getIconColor(active)}
    />
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M8.12499 21.125C7.3051 21.125 6.49647 21.3159 5.76314 21.6826C5.02981 22.0492 4.39192 22.5816 3.89999 23.2375C3.63075 23.5965 3.12147 23.6692 2.76249 23.4C2.4035 23.1308 2.33075 22.6215 2.59999 22.2625C3.24328 21.4048 4.07745 20.7086 5.03642 20.2291C5.99539 19.7496 7.05283 19.5 8.12499 19.5C9.19715 19.5 10.2546 19.7496 11.2136 20.2291C12.1725 20.7086 13.0067 21.4048 13.65 22.2625C13.9192 22.6215 13.8465 23.1308 13.4875 23.4C13.1285 23.6692 12.6192 23.5965 12.35 23.2375C11.8581 22.5816 11.2202 22.0492 10.4868 21.6826C9.7535 21.3159 8.94488 21.125 8.12499 21.125Z"
      fill={getIconColor(active)}
    />
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M8.12499 4.0625C6.77879 4.0625 5.68749 5.15381 5.68749 6.5C5.68749 7.84619 6.77879 8.9375 8.12499 8.9375C9.47118 8.9375 10.5625 7.84619 10.5625 6.5C10.5625 5.15381 9.47118 4.0625 8.12499 4.0625ZM4.06249 6.5C4.06249 4.25634 5.88133 2.4375 8.12499 2.4375C10.3686 2.4375 12.1875 4.25634 12.1875 6.5C12.1875 8.74366 10.3686 10.5625 8.12499 10.5625C5.88133 10.5625 4.06249 8.74366 4.06249 6.5Z"
      fill={getIconColor(active)}
    />
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M8.12499 10.5625C7.3051 10.5625 6.49647 10.7534 5.76314 11.1201C5.02981 11.4867 4.39192 12.0191 3.89999 12.675C3.63075 13.034 3.12147 13.1067 2.76249 12.8375C2.4035 12.5683 2.33075 12.059 2.59999 11.7C3.24328 10.8423 4.07745 10.1461 5.03642 9.66661C5.99539 9.18713 7.05283 8.9375 8.12499 8.9375C9.19715 8.9375 10.2546 9.18713 11.2136 9.66661C12.1725 10.1461 13.0067 10.8423 13.65 11.7C13.9192 12.059 13.8465 12.5683 13.4875 12.8375C13.1285 13.1067 12.6192 13.034 12.35 12.675C11.8581 12.0191 11.2202 11.4867 10.4868 11.1201C9.7535 10.7534 8.94488 10.5625 8.12499 10.5625Z"
      fill={getIconColor(active)}
    />
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M17.875 14.625C16.5288 14.625 15.4375 15.7163 15.4375 17.0625C15.4375 18.4087 16.5288 19.5 17.875 19.5C19.2212 19.5 20.3125 18.4087 20.3125 17.0625C20.3125 15.7163 19.2212 14.625 17.875 14.625ZM13.8125 17.0625C13.8125 14.8188 15.6313 13 17.875 13C20.1186 13 21.9375 14.8188 21.9375 17.0625C21.9375 19.3062 20.1186 21.125 17.875 21.125C15.6313 21.125 13.8125 19.3062 13.8125 17.0625Z"
      fill={getIconColor(active)}
    />
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M17.875 21.125C17.0551 21.125 16.2465 21.3159 15.5131 21.6826C14.7798 22.0492 14.1419 22.5816 13.65 23.2375C13.3807 23.5965 12.8715 23.6692 12.5125 23.4C12.1535 23.1308 12.0807 22.6215 12.35 22.2625C12.9933 21.4048 13.8274 20.7086 14.7864 20.2291C15.7454 19.7496 16.8028 19.5 17.875 19.5C18.9471 19.5 20.0046 19.7496 20.9636 20.2291C21.9225 20.7086 22.7567 21.4048 23.4 22.2625C23.6692 22.6215 23.5965 23.1308 23.2375 23.4C22.8785 23.6692 22.3692 23.5965 22.1 23.2375C21.6081 22.5816 20.9702 22.0492 20.2368 21.6826C19.5035 21.3159 18.6949 21.125 17.875 21.125Z"
      fill={getIconColor(active)}
    />
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M17.875 4.0625C16.5288 4.0625 15.4375 5.15381 15.4375 6.5C15.4375 7.84619 16.5288 8.9375 17.875 8.9375C19.2212 8.9375 20.3125 7.84619 20.3125 6.5C20.3125 5.15381 19.2212 4.0625 17.875 4.0625ZM13.8125 6.5C13.8125 4.25634 15.6313 2.4375 17.875 2.4375C20.1186 2.4375 21.9375 4.25634 21.9375 6.5C21.9375 8.74366 20.1186 10.5625 17.875 10.5625C15.6313 10.5625 13.8125 8.74366 13.8125 6.5Z"
      fill={getIconColor(active)}
    />
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M17.875 10.5625C17.0551 10.5625 16.2465 10.7534 15.5131 11.1201C14.7798 11.4867 14.1419 12.0191 13.65 12.675C13.3807 13.034 12.8715 13.1067 12.5125 12.8375C12.1535 12.5683 12.0807 12.059 12.35 11.7C12.9933 10.8423 13.8274 10.1461 14.7864 9.66661C15.7454 9.18713 16.8028 8.9375 17.875 8.9375C18.9471 8.9375 20.0046 9.18713 20.9636 9.66661C21.9225 10.1461 22.7567 10.8423 23.4 11.7C23.6692 12.059 23.5965 12.5683 23.2375 12.8375C22.8785 13.1067 22.3692 13.034 22.1 12.675C21.6081 12.0191 20.9702 11.4867 20.2368 11.1201C19.5035 10.7534 18.6949 10.5625 17.875 10.5625Z"
      fill={getIconColor(active)}
    />
  </svg>
);
const ChartPieSliceSvg = ({ active }: { active: boolean }) => (
  <svg
    width="26"
    height="26"
    viewBox="0 0 26 26"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M12.4255 2.67544C12.5779 2.52307 12.7846 2.43748 13.0001 2.4375C14.8509 2.43771 16.6692 2.92424 18.2728 3.84836C19.8764 4.77248 21.209 6.10174 22.1372 7.703C23.0654 9.30425 23.5565 11.1213 23.5614 12.9721C23.5663 14.8229 23.0847 16.6425 22.165 18.2487C21.2453 19.8548 19.9198 21.1911 18.3211 22.1237C16.7224 23.0562 14.9067 23.5524 13.0559 23.5623C11.2051 23.5723 9.38418 23.0958 7.77551 22.1806C6.16685 21.2653 4.82692 19.9434 3.88994 18.3473C3.87467 18.3212 3.861 18.2947 3.84892 18.2678C3.63528 17.8813 3.76972 17.3933 4.15377 17.1714L12.1875 12.531V3.25C12.1875 3.0345 12.2731 2.82782 12.4255 2.67544ZM13.3929 13.7114C13.4016 13.7066 13.4101 13.7016 13.4186 13.6965L21.1127 9.25228C21.6507 10.417 21.933 11.687 21.9364 12.9764C21.9405 14.5425 21.5331 16.0821 20.7549 17.4412C19.9767 18.8002 18.855 19.9309 17.5023 20.72C16.1495 21.5091 14.6132 21.9289 13.0471 21.9374C11.4811 21.9458 9.94029 21.5426 8.57911 20.7682C7.43615 20.1179 6.45352 19.225 5.69845 18.1558L13.3929 13.7114ZM20.3 7.8451L13.8125 11.5924V4.09961C15.0949 4.21683 16.3402 4.61015 17.4614 5.2563C18.5868 5.90484 19.5545 6.7892 20.3 7.8451ZM10.2193 3.14536C10.4346 3.29767 10.5625 3.54493 10.5625 3.80859V11.1211C10.5625 11.4111 10.4079 11.6791 10.1569 11.8244L3.81938 15.4908C3.59123 15.6228 3.31322 15.6359 3.07365 15.526C2.83409 15.416 2.66273 15.1967 2.61401 14.9377C2.49375 14.2983 2.43465 13.649 2.43751 12.9984C2.43656 10.8145 3.11322 8.68408 4.3742 6.90097C5.6356 5.11728 7.4195 3.76906 9.47974 3.04236C9.72839 2.95466 10.0041 2.99306 10.2193 3.14536ZM8.93751 5.03917C7.6528 5.69364 6.54019 6.65251 5.70096 7.83923C4.63382 9.34824 4.06133 11.1513 4.06251 12.9995L4.0625 13.0037C4.06179 13.1582 4.06523 13.3127 4.07281 13.4668L8.93751 10.6525V5.03917Z"
      fill={getIconColor(active)}
    />
  </svg>
);
const RocketLaunchSvg = ({ active }: { active: boolean }) => (
  <svg
    width="26"
    height="26"
    viewBox="0 0 26 26"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M21.5101 4.48993C20.567 4.35391 18.2456 4.30267 15.8698 6.67844L9.54825 13L13 16.4517L19.3216 10.1302C21.6973 7.7544 21.6461 5.43301 21.5101 4.48993ZM12.2517 18.0015L7.99849 13.7483L3.98529 12.9438C3.69702 12.8863 3.42898 12.7516 3.21115 12.5542C2.99312 12.3567 2.83281 12.1037 2.74731 11.8222C2.66182 11.5407 2.65435 11.2413 2.72571 10.9558C2.79706 10.6704 2.94456 10.4097 3.15248 10.2016L6.44153 6.92269C6.74119 6.61897 7.14836 6.44523 7.57513 6.43915L7.5867 6.43907H13.8111L14.7208 5.52939C17.5575 2.69268 20.4487 2.69431 21.7457 2.8821C22.0928 2.92962 22.4149 3.08945 22.6627 3.33727C22.9105 3.58509 23.0704 3.90718 23.1179 4.25431C23.3057 5.55132 23.3073 8.44252 20.4706 11.2792L19.5609 12.1889V18.4133L19.5608 18.4249C19.5548 18.8516 19.381 19.2588 19.0773 19.5585L15.7984 22.8475C15.5902 23.0554 15.3296 23.2029 15.0441 23.2743C14.7587 23.3456 14.4593 23.3382 14.1778 23.2527C13.8963 23.1672 13.6433 23.0069 13.4457 22.7888C13.2484 22.571 13.1138 22.3037 13.0564 22.0155L12.2517 18.0015ZM17.9359 13.8139L13.8822 17.8677L14.65 21.6978L17.9359 18.4017V13.8139ZM12.1861 8.06407H7.5982L7.59163 8.07077L4.30218 11.35L4.30345 11.3502L8.13233 12.1178L12.1861 8.06407ZM8.02167 16.184C8.1647 16.6093 7.93585 17.0701 7.51053 17.2131C6.13328 17.6762 5.40134 18.8324 5.00983 20.0081C4.85437 20.4749 4.76044 20.9244 4.70401 21.296C5.07562 21.2395 5.52506 21.1456 5.99191 20.9902C7.1676 20.5986 8.32375 19.8667 8.7869 18.4895C8.92993 18.0641 9.39067 17.8353 9.816 17.9783C10.2413 18.1214 10.4702 18.5821 10.3271 19.0074C9.63247 21.0731 7.9144 22.0627 6.50533 22.5319C5.79351 22.769 5.12712 22.886 4.64073 22.9443C4.39635 22.9736 4.19432 22.9885 4.05079 22.9961C3.97895 22.9998 3.92154 23.0018 3.88055 23.0028C3.86006 23.0033 3.84365 23.0036 3.83157 23.0037L3.81674 23.0039L3.81181 23.0039L3.80998 23.0039C3.80998 23.0039 3.80858 23.0039 3.80858 22.1914C2.99608 22.1914 2.99608 22.1908 2.99608 22.1908L2.99609 22.1882L2.99611 22.1833L2.99624 22.1684C2.99639 22.1563 2.99666 22.1399 2.99717 22.1194C2.99819 22.0785 3.00015 22.021 3.00393 21.9492C3.01148 21.8057 3.02635 21.6036 3.05566 21.3593C3.11401 20.8729 3.23103 20.2065 3.46807 19.4947C3.9373 18.0856 4.92685 16.3675 6.99257 15.6729C7.4179 15.5298 7.87864 15.7587 8.02167 16.184ZM3.80858 22.1914L2.99608 22.1908C2.99608 22.6395 3.35985 23.0039 3.80858 23.0039L3.80858 22.1914Z"
      fill={getIconColor(active)}
    />
  </svg>
);
const LineSegmentsSvg = ({ active }: { active: boolean }) => (
  <svg
    width="26"
    height="26"
    viewBox="0 0 26 26"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M21.9375 4.0625C21.04 4.0625 20.3125 4.79004 20.3125 5.6875C20.3125 6.28849 20.6388 6.81329 21.1238 7.09442C21.1374 7.10078 21.1508 7.10754 21.1642 7.11471C21.179 7.12266 21.1935 7.13101 21.2076 7.13972C21.427 7.25026 21.675 7.3125 21.9375 7.3125C22.835 7.3125 23.5625 6.58496 23.5625 5.6875C23.5625 4.79004 22.835 4.0625 21.9375 4.0625ZM21.1579 8.84338C21.4076 8.90488 21.6688 8.9375 21.9375 8.9375C23.7324 8.9375 25.1875 7.48243 25.1875 5.6875C25.1875 3.89257 23.7324 2.4375 21.9375 2.4375C20.1426 2.4375 18.6875 3.89257 18.6875 5.6875C18.6875 6.62927 19.0881 7.47747 19.7281 8.07104L17.0296 13.0941C16.7799 13.0326 16.5187 13 16.25 13C15.6473 13 15.0829 13.1641 14.599 13.45L12.55 11.401C12.8359 10.9171 13 10.3527 13 9.75C13 7.95507 11.5449 6.5 9.75 6.5C7.95507 6.5 6.5 7.95507 6.5 9.75C6.5 10.6918 6.90057 11.54 7.54063 12.1335L4.84214 17.1566C4.59238 17.0951 4.33125 17.0625 4.0625 17.0625C2.26757 17.0625 0.8125 18.5176 0.8125 20.3125C0.8125 22.1074 2.26757 23.5625 4.0625 23.5625C5.85743 23.5625 7.3125 22.1074 7.3125 20.3125C7.3125 19.3707 6.91193 18.5225 6.27187 17.929L8.97036 12.9059C9.22012 12.9674 9.48125 13 9.75 13C10.3527 13 10.9171 12.8359 11.401 12.55L13.45 14.599C13.1641 15.0829 13 15.6473 13 16.25C13 18.0449 14.4551 19.5 16.25 19.5C18.0449 19.5 19.5 18.0449 19.5 16.25C19.5 15.3082 19.0994 14.46 18.4594 13.8665L21.1579 8.84338ZM16.98 14.7978C16.9941 14.8065 17.0085 14.8148 17.0233 14.8228C17.0366 14.83 17.0501 14.8367 17.0637 14.8431C17.5487 15.1242 17.875 15.649 17.875 16.25C17.875 17.1475 17.1475 17.875 16.25 17.875C15.3525 17.875 14.625 17.1475 14.625 16.25C14.625 15.3525 15.3525 14.625 16.25 14.625C16.5125 14.625 16.7605 14.6872 16.98 14.7978ZM9.02005 11.2022C9.23952 11.3128 9.48749 11.375 9.75 11.375C10.6475 11.375 11.375 10.6475 11.375 9.75C11.375 8.85254 10.6475 8.125 9.75 8.125C8.85254 8.125 8.125 8.85254 8.125 9.75C8.125 10.351 8.45126 10.8758 8.93633 11.1569C8.94989 11.1633 8.96335 11.17 8.9767 11.1772C8.9915 11.1852 9.00595 11.1935 9.02005 11.2022ZM4.79246 18.8603C4.80655 18.869 4.821 18.8773 4.8358 18.8853C4.84915 18.8925 4.86261 18.8992 4.87616 18.9056C5.36124 19.1867 5.6875 19.7115 5.6875 20.3125C5.6875 21.21 4.95996 21.9375 4.0625 21.9375C3.16504 21.9375 2.4375 21.21 2.4375 20.3125C2.4375 19.415 3.16504 18.6875 4.0625 18.6875C4.32501 18.6875 4.57298 18.7497 4.79246 18.8603Z"
      fill={getIconColor(active)}
    />
  </svg>
);

const ApertureIcon = ({ active }: { active: boolean }) => (
  <Icon component={() => <ApertureSvg active={active} />} />
);
const MountainsIcon = ({ active }: { active: boolean }) => (
  <Icon component={() => <MountainsSvg active={active} />} />
);
const UserSwitchIcon = ({ active }: { active: boolean }) => (
  <Icon component={() => <UserSwitchSvg active={active} />} />
);
const HexagonIcon = ({ active }: { active: boolean }) => (
  <Icon component={() => <HexagonSvg active={active} />} />
);
const UsersFourIcon = ({ active }: { active: boolean }) => (
  <Icon component={() => <UsersFourSvg active={active} />} />
);
const ChartPieSliceIcon = ({ active }: { active: boolean }) => (
  <Icon component={() => <ChartPieSliceSvg active={active} />} />
);
const RocketLaunchIcon = ({ active }: { active: boolean }) => (
  <Icon component={() => <RocketLaunchSvg active={active} />} />
);
const LineSegmentIcon = ({ active }: { active: boolean }) => (
  <Icon component={() => <LineSegmentsSvg active={active} />} />
);

const App: React.FC = () => {
  const [collapsed, setCollapsed] = useState(false);
  const [selectedKey, setSelectedKey] = useState("1");

  const asideItems = [
    { key: "1", icon: <ApertureIcon active={selectedKey === "1"} /> },
    { key: "2", icon: <MountainsIcon active={selectedKey === "2"} /> },
    { key: "3", icon: <UserSwitchIcon active={selectedKey === "3"} /> },
    { key: "4", icon: <HexagonIcon active={selectedKey === "4"} /> },
    { key: "5", icon: <UsersFourIcon active={selectedKey === "5"} /> },
    { key: "6", icon: <ChartPieSliceIcon active={selectedKey === "6"} /> },
    { key: "7", icon: <RocketLaunchIcon active={selectedKey === "7"} /> },
    { key: "8", icon: <LineSegmentIcon active={selectedKey === "8"} /> },
  ];

  return (
    <aside className="flex">
      <div>
        <a className="" href="/">
          <Image className="m-4" src={logo} height={32} width={32} alt="logo" />
        </a>
        <ul className="mt-7">
          {asideItems.map((item) => (
            <li
              className={`p-[19px] ${
                selectedKey === item.key
                  ? "rounded-tl-3xl rounded-bl-3xl fp-white-bg"
                  : ""
              }`}
              key={item.key}
            >
              <a href="/">{item.icon}</a>
            </li>
          ))}
        </ul>
      </div>
      <div className="fp-white-bg h-dvh relative">
        <h5 className={`${collapsed ? "hidden" : "px-6 py-[18px] heading-5"}`}>
          Radical Focus
        </h5>
        <button
          onClick={() => setCollapsed((past) => !past)}
          className={`text-xs fp-bg py-2 px-[2px] absolute translate-y-[-50%] rounded-tl-md rounded-bl-md ${collapsed ? '-right-6 top-8 ' : 'right-0 top-8'}`}
        >
          {collapsed ? <RightOutlined /> : <LeftOutlined />}
        </button>
        <div
          className={`${
            collapsed
              ? "hidden"
              : "flex flex-col h-[calc(100dvh-64px)] justify-between"
          }`}
        >
          <div className="p-6 flex flex-col gap-4">
            <span className="sb-caption-2 fp-purple-medium-ft">
              Direct Report
            </span>
            <ul className="fp-purple-dark-ft">
              <li className="m-caption-1 fp-blue-light-ft py-[9px]">My Radical Focus</li>
              <li>
                <select className="m-caption-1 py-[9px]" name="" id="">
                  <option value="">Jennifer Mayer CSO</option>
                </select>
              </li>
              <li className="m-caption-1 py-[9px]">John Hancock CPO</li>
              <li>
                <select className="m-caption-1 py-[9px]" name="" id="">
                  <option value="">Johny Cash CFO</option>
                </select>
              </li>
              <li>
                <select className="m-caption-1 py-[9px]" name="" id="">
                  <option value="">Manfred Muller COO</option>
                </select>
              </li>
            </ul>

            <button className="fp-purple-light-bg fp-blue-light-ft sb-caption-1 p-[9px] rounded-lg flex items-center justify-center">
              <PlusOutlined className="mr-1.5 text-lg" />
              Add Direct Report
            </button>
          </div>
          <div className="flex flex-col items-center pt-6 pb-8">
            <Image
              src={applyRadicalFocus}
              width={162}
              height={158}
              alt="apply radical focus"
            />
            <div className="mt-4 px-6 text-center">
              <p className="sb-caption-1"> Apply Radical Focus</p>
              <p className="pt-2 body-2">
                Track objectives, define priorities <br /> and update KPIs &
                initiatives
              </p>
            </div>
          </div>
        </div>
      </div>
    </aside>
  );
};

export default App;
